{"ast":null,"code":"import axios from 'axios';\nimport { GET_ALL, LOADING, ERROR } from '../types/usersTypes'; //Creo una funcion que retorna otra funcion, esta ultima funcion trae como parametro el dispath que dispara la llamada y contacta al reducer para que haga el cambio de estado\n\nexport const getAll = () => async dispatch => {\n  dispatch({\n    type: LOADING\n  }); //Manejo de errores\n\n  try {\n    //funcion asincrona, trae una promesa\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n    dispatch({\n      type: GET_ALL,\n      //Tipo \n      payload: response.data\n    }); //Si existe un promesa entra al catch\n  } catch (error) {\n    console.log('Error' + error.message);\n    dispatch({\n      type: ERROR,\n      payload: 'Algo sali칩 mal, intente m치s tarde.'\n    });\n  }\n};","map":{"version":3,"sources":["/home/alejandra/Escritorio/Proyectos/Platzi/Blog/src/redux/actions/userActions.js"],"names":["axios","GET_ALL","LOADING","ERROR","getAll","dispatch","type","response","get","payload","data","error","console","log","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,KAA1B,QAAsC,qBAAtC,C,CAEA;;AAEA,OAAO,MAAMC,MAAM,GAAC,MAAK,MAAOC,QAAP,IAAkB;AACvCA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACJ;AADA,GAAD,CAAR,CADuC,CAIvC;;AACA,MAAI;AACA;AACA,UAAMK,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,4CAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,OADD;AACU;AACfQ,MAAAA,OAAO,EAACF,QAAQ,CAACG;AAFZ,KAAD,CAAR,CAHA,CAOJ;AACC,GARD,CASA,OAAOC,KAAP,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAASF,KAAK,CAACG,OAA3B;AACAT,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACH,KADA;AAELM,MAAAA,OAAO,EAAC;AAFH,KAAD,CAAR;AAIH;AACJ,CArBM","sourcesContent":["import axios from 'axios'\nimport {GET_ALL, LOADING, ERROR} from '../types/usersTypes'\n\n//Creo una funcion que retorna otra funcion, esta ultima funcion trae como parametro el dispath que dispara la llamada y contacta al reducer para que haga el cambio de estado\n\nexport const getAll=()=> async (dispatch)=>{\n    dispatch({\n        type:LOADING\n    })\n    //Manejo de errores\n    try {\n        //funcion asincrona, trae una promesa\n        const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n        dispatch({\n            type: GET_ALL, //Tipo \n            payload:response.data \n        })\n    //Si existe un promesa entra al catch\n    } \n    catch (error) {\n        console.log('Error'+ error.message)\n        dispatch({\n            type:ERROR ,\n            payload:'Algo sali칩 mal, intente m치s tarde.'\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}