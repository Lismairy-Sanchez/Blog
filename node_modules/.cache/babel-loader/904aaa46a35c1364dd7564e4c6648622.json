{"ast":null,"code":"import axios from 'axios'; //Creo una funcion que retorna otra funcion, esta ultima funcion trae como parametro el dispath que dispara la llamada y contacta al reducer para que haga el cambio de estado\n\nexport const getAll = () => dispatch => {\n  //funcion asincrona, trae una promesa\n  const response = axios.get('https://jsonplaceholder.typicode.com/users');\n  dispatch({\n    type: 'bring_Users',\n    //Tipo \n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/home/alejandra/Escritorio/blog/src/redux/actions/userActions.js"],"names":["axios","getAll","dispatch","response","get","type","payload","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAO,MAAMC,MAAM,GAAC,MAAKC,QAAD,IAAY;AACpC;AACE,QAAMC,QAAQ,GAAGH,KAAK,CAACI,GAAN,CAAU,4CAAV,CAAjB;AACFF,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAE,aADD;AACgB;AACrBC,IAAAA,OAAO,EAACH,QAAQ,CAACI;AAFZ,GAAD,CAAR;AAIC,CAPM","sourcesContent":["import axios from 'axios'\n//Creo una funcion que retorna otra funcion, esta ultima funcion trae como parametro el dispath que dispara la llamada y contacta al reducer para que haga el cambio de estado\n\nexport const getAll=()=>(dispatch)=>{\n//funcion asincrona, trae una promesa\n  const response = axios.get('https://jsonplaceholder.typicode.com/users')\ndispatch({\n    type: 'bring_Users', //Tipo \n    payload:response.data \n})\n}"]},"metadata":{},"sourceType":"module"}