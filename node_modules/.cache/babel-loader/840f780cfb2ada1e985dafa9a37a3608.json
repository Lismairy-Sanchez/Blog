{"ast":null,"code":"var _jsxFileName = \"/home/alejandra/Escritorio/blog/src/componets/users/index.js\";\n//Componente de Clase\nimport React, { Component } from 'react'; //Importo Axios\n\nimport axios from 'axios'; //importo el concet\n\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Users extends Component {\n  constructor() {\n    //Super hereda del Componente\n    super(); //Defino el estado inicial\n\n    this.bring_Users = () => //Map itera por la cantidad de elementos que tenga en el arreglo\n    this.state.users.map(user =>\n    /*#__PURE__*/\n    //Se define la key\n    _jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.website\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this));\n\n    this.state = {\n      users: []\n    };\n  } //Funcion de montado\n\n\n  async componentDidMount() {\n    //funcion asincrona, trae una promesa\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users'); //Seteo el estado\n\n    this.setState({\n      users: response.data\n    });\n  } //Agregar \n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.bring_Users()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = reducers => {\n  return reducers.usersReducer;\n}; //connect recibe como primer parametro todos los reducers, y como segundo parametro todas las acciones\n\n\nexport default connect(mapStateToProps)(Users);","map":{"version":3,"sources":["/home/alejandra/Escritorio/blog/src/componets/users/index.js"],"names":["React","Component","axios","connect","Users","constructor","bring_Users","state","users","map","user","name","email","website","id","componentDidMount","response","get","setState","data","render","mapStateToProps","reducers","usersReducer"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAKA,MAAMC,KAAN,SAAoBH,SAApB,CAA6B;AAE7BI,EAAAA,WAAW,GAAE;AACX;AACA,YAFW,CAGX;;AAHW,SAsBXC,WAtBW,GAsBE,MACX;AACJ,SAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD;AAAA;AACnB;AACA;AAAA,8BACE;AAAA,kBACGA,IAAI,CAACC;AADR;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBACGD,IAAI,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA,kBACGF,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OAASH,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA,YAFF,CAxBa;;AAIX,SAAKP,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAC;AADG,KAAX;AAGD,GAT4B,CAW7B;;;AACuB,QAAjBO,iBAAiB,GAAE;AACxB;AACC,UAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,4CAAV,CAAvB,CAFuB,CAItB;;AACD,SAAKC,QAAL,CAAe;AACbV,MAAAA,KAAK,EAACQ,QAAQ,CAACG;AADF,KAAf;AAGD,GApB4B,CAuB7B;;;AAmBEC,EAAAA,MAAM,GAAG;AAEP,wBACA;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE;AAAA,oBAEG,KAAMd,WAAN;AAFH;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAuBD;;AAnE0B;;AAsE7B,MAAMe,eAAe,GAAGC,QAAD,IAAY;AACnC,SAAOA,QAAQ,CAACC,YAAhB;AACC,CAFD,C,CAGA;;;AACA,eAAepB,OAAO,CAACkB,eAAD,CAAP,CAA0BjB,KAA1B,CAAf","sourcesContent":["//Componente de Clase\nimport React, {Component} from 'react';\n//Importo Axios\nimport axios from 'axios';\n\n//importo el concet\nimport {connect} from 'react-redux'\n\n\n\n\nclass Users extends Component{\n  \nconstructor(){\n  //Super hereda del Componente\n  super();\n  //Defino el estado inicial\n  this.state={\n    users:[]\n  }\n}\n\n//Funcion de montado\nasync componentDidMount(){\n //funcion asincrona, trae una promesa\n  const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n  \n   //Seteo el estado\n  this.setState ({\n    users:response.data\n  })\n}\n\n\n//Agregar \n  bring_Users =() => (\n    //Map itera por la cantidad de elementos que tenga en el arreglo\nthis.state.users.map((user)=>(\n  //Se define la key\n  <tr key={user.id}>\n    <td>\n      {user.name}\n    </td>\n    <td>\n      {user.email}\n    </td>\n    <td>\n      {user.website}\n    </td>\n  </tr>\n    )) \n  );\n\n  render (){\n    \n    return(\n    <div >\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>\n              Nombre\n            </th>\n            <th>\n              Email\n            </th>\n            <th>\n              Link\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {/* this se usa para hacer referencia a una funcion */}\n          {this. bring_Users()}\n        </tbody>\n      </table>\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps= (reducers)=>{\nreturn reducers.usersReducer\n};\n//connect recibe como primer parametro todos los reducers, y como segundo parametro todas las acciones\nexport default connect(mapStateToProps) (Users);\n"]},"metadata":{},"sourceType":"module"}