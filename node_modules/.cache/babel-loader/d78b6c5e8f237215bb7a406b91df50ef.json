{"ast":null,"code":"//Creo una funcion que retorna otra funcion, esta ultima funcion trae como parametro el dispath que dispara la llamada y contacta al reducer para que haga el cambio de estado\nexport const getAll = () => dispatch => {\n  dispatch({\n    type: 'bring_Users',\n    //Tipo \n    payload: [1, 2, 3]\n  });\n};","map":{"version":3,"sources":["/home/alejandra/Escritorio/blog/src/redux/actions/userActions.js"],"names":["getAll","dispatch","type","payload"],"mappings":"AAAA;AAEA,OAAO,MAAMA,MAAM,GAAC,MAAKC,QAAD,IAAY;AACpCA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,aADD;AACgB;AACrBC,IAAAA,OAAO,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AAFH,GAAD,CAAR;AAIC,CALM","sourcesContent":["//Creo una funcion que retorna otra funcion, esta ultima funcion trae como parametro el dispath que dispara la llamada y contacta al reducer para que haga el cambio de estado\n\nexport const getAll=()=>(dispatch)=>{\ndispatch({\n    type: 'bring_Users', //Tipo \n    payload:[1,2,3]  \n})\n}"]},"metadata":{},"sourceType":"module"}