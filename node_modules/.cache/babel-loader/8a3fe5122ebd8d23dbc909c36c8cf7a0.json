{"ast":null,"code":"import axios from 'axios';\nimport { GET_ALL } from '../types/usersTypes'; //Creo una funcion que retorna otra funcion, esta ultima funcion trae como parametro el dispath que dispara la llamada y contacta al reducer para que haga el cambio de estado\n\nexport const getAll = () => async dispatch => {\n  //funcion asincrona, trae una promesa\n  const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n  dispatch({\n    type: GET_ALL,\n    //Tipo \n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/home/alejandra/Escritorio/blog/src/redux/actions/userActions.js"],"names":["axios","GET_ALL","getAll","dispatch","response","get","type","payload","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,qBAAtB,C,CACA;;AAEA,OAAO,MAAMC,MAAM,GAAC,MAAK,MAAOC,QAAP,IAAkB;AAC3C;AACE,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,4CAAV,CAAvB;AACFF,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEL,OADD;AACU;AACfM,IAAAA,OAAO,EAACH,QAAQ,CAACI;AAFZ,GAAD,CAAR;AAIC,CAPM","sourcesContent":["import axios from 'axios'\nimport {GET_ALL} from '../types/usersTypes'\n//Creo una funcion que retorna otra funcion, esta ultima funcion trae como parametro el dispath que dispara la llamada y contacta al reducer para que haga el cambio de estado\n\nexport const getAll=()=> async (dispatch)=>{\n//funcion asincrona, trae una promesa\n  const response = await axios.get('https://jsonplaceholder.typicode.com/users')\ndispatch({\n    type: GET_ALL, //Tipo \n    payload:response.data \n})\n}"]},"metadata":{},"sourceType":"module"}